version: '3.8'

services:
  # FastAPI Backend
  api:
    build:
      context: ..
      dockerfile: deployment/Dockerfile.api
    container_name: code-assistant-api
    restart: always
    ports:
      - "8000:8000"
    environment:
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@db:5432/codeassistant
      - REDIS_URL=redis://redis:6379
      - CORS_ORIGINS=["https://your-domain.com"]
    volumes:
      - ../chroma_db:/app/chroma_db
      - ../sample_repos:/app/sample_repos
    depends_on:
      - db
      - redis
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: code-assistant-db
    restart: always
    environment:
      - POSTGRES_DB=codeassistant
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: code-assistant-redis
    restart: always
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: code-assistant-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
      - ../frontend/out:/usr/share/nginx/html:ro
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data: